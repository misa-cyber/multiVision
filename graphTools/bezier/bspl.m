function y = bspl(x, t, dim, bin)

%     Y = BSPL(X, T, DIM, BIN): Returns the Bézier curve 'Y' that results
%     from evaluating the control points 'X' with a knot vector 'T' along
%     the dimension specified in 'DIM'. An optional parameter 'BIN' could
%     parse the binomial coefficient terms to be used. Examples of use:
% 
%     Y = BSPL(X)                           100 - point evaluation
%     Y = BSPL(X, N)                        'N' - point evaluation
%     Y = BSPL(X, V)                        Evaluate 'X' in knots 'V'
%     Y = BSPL(X, ..., 1)                   Operate in the rows of 'X'
%     Y = BSPL(X, ..., [1 4 6 4 1])         Parse binomial coefficient
% 
%     The processing of a piece-wise Bézier curve is supported. The curve
%     may be vectorised through degree elevation if optimal. In the event
%     the knot vector was a scalar, a uniform knot vector with such value
%     as resolution is instead used.
% 
%     The numerical coefficients used to select different curve cases are
%     result of speed and stability test functions performed in a machine
%     of 32GB RAM, 6 Intel Core i9-8950HK CPU 2.90 GHz processors running
%     MATLAB R2021a.


    % Parse control points
    x = double(x);
    
    % Transpose if DIM exists and is equal to the unit
    if nargin > 2 && any(dim == 1)
        x = x';
    end
    
    % Initialise dimension
    [sz, p] = size(x);
    
    % Calculate number of curve segments
    idx = find(all(diff(x) == 0, 2));
    a = length(idx) + 1;
    z = diff([0; idx; sz]);
    
    % Equally-sized segments: matrix form
    if all(z == z(1)) && a > 1
        s(2) = z(1);
        x = reshape(x', p, [], a);
        x = permute(x, [1, 3, 2]);
        x = reshape(x, [], s(2))';
        dim = p;
        a = 1;
        [sz, p] = size(x);
    else
        
        % Long composite curves: equalise sizes
        if a > 5
            j = sz;
            k = max(z) - z;
            
            % Knot insertion
            ii = p * (a - 1) + 1 : p * a;
            for i = a : -1 : 1
                y(:, ii) = bsplkin(x(j - z(i) + 1 : j, :), k(i));
                ii = ii - p;
                j = j - z(i);
            end
            x = y;
            
            % Correct dimensions
            dim = p;
            [sz, p] = size(x);
            s(2) = a;
            a = 1;
            
        % Iterative construction
        else
            s(2) = 0;
        end
    end
    
    % Default: uniform knot vector
    if nargin < 2 || isempty(t)
        if s(2) > 0
            q = max(round(100 / (s(2) - 2)), 10);
        else
            q = max(round(100 / a), 10);
        end
        s(1) = 1;
        t = (0 : 1 / (q - 1) : 1)';
        
    % Parse knot vector
    else
        q = length(t(:));
        
        % End-value curve evaluation
        if q == 1 && t == fix(t)
            
            % Initial value
            if t == 0
                if a == 1
                    y = x(1, :);
                else
                    y = x([1, idx + 1], :);
                end
                return
                
            % Final value
            elseif t == 1
                if a == 1
                    y = x(1, :);
                else
                    y = x([idx, sz], :);
                end
                return
            end
            
            % Uniform knots given resolution
            q = t;
            s(1) = 1;
            t = (0 : 1 / (q - 1) : 1)';
            
        % User-defined knot vector
        else
            t = double(t(:));
            
            % Troubleshooting
            if any(t > 1) || any(t < 0)
                t = t - min(t);
                t = t / max(t);
            end
            s(1) = 0;
        end
    end
    
    % Piecewise segment processing
    y = zeros(a * q, p);
    r = 0;
    for iter = 1 : a
        
        % Single curve segment
        if a == 1
            z = x;
        else
            
            % Initialise curve segment
            if iter == 1
                z = x(1 : idx(iter), :);
                
            % Append last segment
            elseif iter == a
                z = x(idx(iter - 1) + 1 : sz, :);
                
            % Append intermediate segment
            else
                z = x(idx(iter - 1) + 1 : idx(iter), :);
            end
        end
        
        % Trivial cases
        n = size(z, 1);
        if n < 3
            
            % Point value
            if n == 1
                r = r + 1;
                y(r, :) = z;
                continue
            end
            
            % Linear interpolation
            if n == 2
                y(r + 1 : r + q, :) = z(1, :) .* (1 - t) + z(2, :) .* t;
                r = r + q;
                continue
            end
        end

        % Small cases: De-Casteljau construction
        if n < 11 && q < 72 - 8 * (n - 2)
            u = 1 - t;
            b = zeros(q, p);
            
            % Iterate in every query knot value
            for i = 1 : q
                v = z;
                
                % Iterate in every control point
                for j = 1 : n
                    
                    % Append linear interpolation
                    for k = 1 : n - j
                        v(k, :) = u(i) * v(k, :) + t(i) * v(k + 1, :);
                    end
                end
                
                % Get the final interpolated value
                b(i, :) = v(1, :);
            end
            
        % Low orders: Bernstein matrix
        elseif n < 59
            m = n - 1;
            
            % Evaluate binomial coefficient
            if nargin > 3
                z = z .* double(bin(:));
            else
                z = z .* bsplbin(n);
            end
            
            % Build Bernstein matrix
            b = repmat(t, 1, n);
            
            % Uniform knots: symmetry
            if s(1) == 1
                b = b .^ (0 : m);
                b = b .* b(q : -1 : 1, n : -1 : 1);
                
            % Regular knots
            else
                b = b .^ (0 : m) .* (1 - b) .^ (m : -1 : 0);
            end
            
            % Evaluate control points
            b = b * z;

        % High orders: Logarithmic approach
        else
            
            % Prepare points
            m = n - 1;
            c = 1 + abs(min(z(:)));
            z = z + c;
            
            % Initialise solution
            b = z(1, :) .* (1 - t) .^ m;
            b = b + z(n, :) .*  t .^ m;
            
            % Logarithmic format
            z(1, :) = [];
            z(m, :) = [];
            z = log(z);
            
            % Calculate logarithmic binomial coefficient
            if nargin > 3
                z = z + double(bin(:));
            else
                z = z + bsplbin(n);
            end

            % 'Small' arrays: fully-vectorised operations
            n = n * p * q;
            if n < 262144
                m = m - 1;
                
                % Logarithmic matrix build
                u = log(t) .* (1 : m);
                u = u + log(1 - t) .* (m : -1 : 1);
                u = repmat(u', p, 1);
                u = u + z(:);
                u = exp(u);
                
                % Prepare linear functions
                u = reshape(u', q, m, p);
                u = permute(u, [1, 3, 2]);
                u = reshape(u, p * q, m);
                
                % Combine linear functions
                u = sum(u, 2);
                u = reshape(u, q, p);
                
                % Update result
                b = b + u;

            % 'Medium' arrays: partially-vectorised operations
            elseif n < 695131852
                m = m - 1;
                
                % Logarithmic Bernstein basis
                u = log(t) .* (1 : m);
                u = u + log(1 - t) .* (m : -1 : 1);
                
                % Linearise basis functions
                for i = 1 : m
                    m = z(i, :) + u(:, i);
                    m = exp(m);
                    b = b + m;
                end

            % 'Large' arrays: iterative construction of terms
            else
                
                % Initialise logarithmic terms
                t1 = log(t);
                t2 = log(1 - t);
                
                % Iterative form of the previous approach
                for i = 1 : m - 1
                    u = i * t1;
                    u = u + (m - i) * t2;
                    u = u + z(i, :);
                    u = exp(u);
                    b = b + u;
                end
            end
            
            % Correct curve range
            b = b - c;
        end
        
        % Append curve segment
        y(r + 1 : r + q, :) = b;
        r = r + q;
        
        % Reshape dimension
        if s(2) > 0
            b = y;
            y = zeros(p / dim * q, dim);
            for i = 1 : dim
                y(:, i) = reshape(b(:, i : dim : p), [], 1);
            end
        end
    end
end


% Obtain binomial coefficients
function b = bsplbin(n)

    % B = BSPLBIN(N) Returns the binomial coefficients 'B' that correspond
    % to the 'N'-th row of the Pascal Triangle. In the event of high-order
    % curves, the central logarithmic binomial terms are instead computed.


    % Table look-up for binomial coefficients
    if n < 59
        b = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59;0,0,1,3,6,10,15,21,28,36,45,55,66,78,91,105,120,136,153,171,190,210,231,253,276,300,325,351,378,406,435,465,496,528,561,595,630,666,703,741,780,820,861,903,946,990,1035,1081,1128,1176,1225,1275,1326,1378,1431,1485,1540,1596,1653,1711;0,0,0,1,4,10,20,35,56,84,120,165,220,286,364,455,560,680,816,969,1140,1330,1540,1771,2024,2300,2600,2925,3276,3654,4060,4495,4960,5456,5984,6545,7140,7770,8436,9139,9880,10660,11480,12341,13244,14190,15180,16215,17296,18424,19600,20825,22100,23426,24804,26235,27720,29260,30856,32509;0,0,0,0,1,5,15,35,70,126,210,330,495,715,1001,1365,1820,2380,3060,3876,4845,5985,7315,8855,10626,12650,14950,17550,20475,23751,27405,31465,35960,40920,46376,52360,58905,66045,73815,82251,91390,101270,111930,123410,135751,148995,163185,178365,194580,211876,230300,249900,270725,292825,316251,341055,367290,395010,424270,455126;0,0,0,0,0,1,6,21,56,126,252,462,792,1287,2002,3003,4368,6188,8568,11628,15504,20349,26334,33649,42504,53130,65780,80730,98280,118755,142506,169911,201376,237336,278256,324632,376992,435897,501942,575757,658008,749398,850668,962598,1086008,1221759,1370754,1533939,1712304,1906884,2118760,2349060,2598960,2869685,3162510,3478761,3819816,4187106,4582116,5006386;0,0,0,0,0,0,1,7,28,84,210,462,924,1716,3003,5005,8008,12376,18564,27132,38760,54264,74613,100947,134596,177100,230230,296010,376740,475020,593775,736281,906192,1107568,1344904,1623160,1947792,2324784,2760681,3262623,3838380,4496388,5245786,6096454,7059052,8145060,9366819,10737573,12271512,13983816,15890700,18009460,20358520,22957480,25827165,28989675,32468436,36288252,40475358,45057474;0,0,0,0,0,0,0,1,8,36,120,330,792,1716,3432,6435,11440,19448,31824,50388,77520,116280,170544,245157,346104,480700,657800,888030,1184040,1560780,2035800,2629575,3365856,4272048,5379616,6724520,8347680,10295472,12620256,15380937,18643560,22481940,26978328,32224114,38320568,45379620,53524680,62891499,73629072,85900584,99884400,115775100,133784560,154143080,177100560,202927725,231917400,264385836,300674088,341149446;0,0,0,0,0,0,0,0,1,9,45,165,495,1287,3003,6435,12870,24310,43758,75582,125970,203490,319770,490314,735471,1081575,1562275,2220075,3108105,4292145,5852925,7888725,10518300,13884156,18156204,23535820,30260340,38608020,48903492,61523748,76904685,95548245,118030185,145008513,177232627,215553195,260932815,314457495,377348994,450978066,536878650,636763050,752538150,886322710,1040465790.00000,1217566350.00000,1420494075.00000,1652411475.00000,1916797311.00000,2217471399.00000;0,0,0,0,0,0,0,0,0,1,10,55,220,715,2002,5005,11440,24310,48620,92378,167960,293930,497420,817190,1307504,2042975,3124550,4686825,6906900,10015005,14307150,20160075,28048800,38567100,52451256,70607460,94143280,124403620,163011640,211915132,273438880,350343565,445891810,563921995,708930508,886163135,1101716330.00000,1362649145.00000,1677106640.00000,2054455634.00000,2505433700.00000,3042312350.00000,3679075400.00000,4431613550.00000,5317936260.00000,6358402050.00000,7575968400.00000,8996462475.00000,10648873950.0000,12565671261.0000;0,0,0,0,0,0,0,0,0,0,1,11,66,286,1001,3003,8008,19448,43758,92378,184756,352716,646646,1144066,1961256,3268760,5311735,8436285,13123110,20030010,30045015,44352165,64512240,92561040,131128140,183579396,254186856,348330136,472733756,635745396,847660528,1121099408.00000,1471442973.00000,1917334783.00000,2481256778.00000,3190187286.00000,4076350421.00000,5178066751.00000,6540715896.00000,8217822536.00000,10272278170.0000,12777711870.0000,15820024220.0000,19499099620.0000,23930713170.0000,29248649430.0000,35607051480.0000,43183019880.0000,52179482355.0000,62828356305.0000;0,0,0,0,0,0,0,0,0,0,0,1,12,78,364,1365,4368,12376,31824,75582,167960,352716,705432,1352078,2496144,4457400,7726160,13037895,21474180,34597290,54627300,84672315,129024480,193536720,286097760,417225900,600805296,854992152,1203322288.00000,1676056044.00000,2311801440.00000,3159461968.00000,4280561376.00000,5752004349.00000,7669339132.00000,10150595910.0000,13340783196.0000,17417133617.0000,22595200368.0000,29135916264.0000,37353738800.0000,47626016970.0000,60403728840.0000,76223753060.0000,95722852680.0000,119653565850.000,148902215280.000,184509266760.000,227692286640.000,279871768995.000;0,0,0,0,0,0,0,0,0,0,0,0,1,13,91,455,1820,6188,18564,50388,125970,293930,646646,1352078,2704156,5200300,9657700,17383860,30421755,51895935,86493225,141120525,225792840,354817320,548354040,834451800,1251677700.00000,1852482996.00000,2707475148.00000,3910797436.00000,5586853480.00000,7898654920.00000,11058116888.0000,15338678264.0000,21090682613.0000,28760021745.0000,38910617655.0000,52251400851.0000,69668534468.0000,92263734836.0000,121399651100.000,158753389900.000,206379406870.000,266783135710.000,343006888770.000,438729741450.000,558383307300.000,707285522580.000,891794789340.000,1119487075980.00;0,0,0,0,0,0,0,0,0,0,0,0,0,1,14,105,560,2380,8568,27132,77520,203490,497420,1144066,2496144,5200300,10400600,20058300,37442160,67863915,119759850,206253075,347373600,573166440,927983760,1476337800.00000,2310789600.00000,3562467300.00000,5414950296.00000,8122425444.00000,12033222880.0000,17620076360.0000,25518731280.0000,36576848168.0000,51915526432.0000,73006209045.0000,101766230790.000,140676848445.000,192928249296.000,262596783764.000,354860518600.000,476260169700.000,635013559600.000,841392966470.000,1108176102180.00,1451182990950.00,1889912732400.00,2448296039700.00,3155581562280.00,4047376351620.00;0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,120,680,3060,11628,38760,116280,319770,817190,1961256,4457400,9657700,20058300,40116600,77558760,145422675,265182525,471435600,818809200,1391975640.00000,2319959400.00000,3796297200.00000,6107086800.00000,9669554100.00000,15084504396.0000,23206929840.0000,35240152720.0000,52860229080.0000,78378960360.0000,114955808528.000,166871334960.000,239877544005.000,341643774795.000,482320623240.000,675248872536.000,937845656300.000,1292706174900.00,1768966344600.00,2403979904200.00,3245372870670.00,4353548972850.00,5804731963800.00,7694644696200.00,10142940735900.0,13298522298180.0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,16,136,816,3876,15504,54264,170544,490314,1307504,3268760,7726160,17383860,37442160,77558760,155117520,300540195,565722720,1037158320.00000,1855967520.00000,3247943160.00000,5567902560.00000,9364199760.00000,15471286560.0000,25140840660.0000,40225345056.0000,63432274896.0000,98672427616.0000,151532656696.000,229911617056.000,344867425584.000,511738760544.000,751616304549.000,1093260079344.00,1575580702584.00,2250829575120.00,3188675231420.00,4481381406320.00,6250347750920.00,8654327655120.00,11899700525790.0,16253249498640.0,22057981462440.0,29752626158640.0,39895566894540.0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,17,153,969,4845,20349,74613,245157,735471,2042975,5311735,13037895,30421755,67863915,145422675,300540195,601080390,1166803110.00000,2203961430.00000,4059928950.00000,7307872110.00000,12875774670.0000,22239974430.0000,37711260990.0000,62852101650.0000,103077446706.000,166509721602.000,265182149218.000,416714805914.000,646626422970.000,991493848554.000,1503232609098.00,2254848913647.00,3348108992991.00,4923689695575.00,7174519270695.00,10363194502115.0,14844575908435.0,21094923659355.0,29749251314475.0,41648951840265.0,57902201338905.0,79960182801345.0,109712808959985;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,18,171,1140,5985,26334,100947,346104,1081575,3124550,8436285,21474180,51895935,119759850,265182525,565722720,1166803110.00000,2333606220.00000,4537567650.00000,8597496600.00000,15905368710.0000,28781143380.0000,51021117810.0000,88732378800.0000,151584480450.000,254661927156.000,421171648758.000,686353797976.000,1103068603890.00,1749695026860.00,2741188875414.00,4244421484512.00,6499270398159.00,9847379391150.00,14771069086725.0,21945588357420.0,32308782859535.0,47153358767970.0,68248282427325.0,97997533741800.0,139646485582065,197548686920970,277508869722315;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,19,190,1330,7315,33649,134596,480700,1562275,4686825,13123110,34597290,86493225,206253075,471435600,1037158320.00000,2203961430.00000,4537567650.00000,9075135300.00000,17672631900.0000,33578000610.0000,62359143990.0000,113380261800.000,202112640600.000,353697121050.000,608359048206.000,1029530696964.00,1715884494940.00,2818953098830.00,4568648125690.00,7309837001104.00,11554258485616.0,18053528883775.0,27900908274925.0,42671977361650.0,64617565719070.0,96926348578605.0,144079707346575,212327989773900,310325523515700,449972009097765,647520696018735;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,20,210,1540,8855,42504,177100,657800,2220075,6906900,20030010,54627300,141120525,347373600,818809200,1855967520.00000,4059928950.00000,8597496600.00000,17672631900.0000,35345263800.0000,68923264410.0000,131282408400.000,244662670200.000,446775310800.000,800472431850.000,1408831480056.00,2438362177020.00,4154246671960.00,6973199770790.00,11541847896480.0,18851684897584.0,30405943383200.0,48459472266975.0,76360380541900.0,119032357903550,183649923622620,280576272201225,424655979547800,636983969321700,947309492837400,1.39728150193517e+15;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,231,1771,10626,53130,230230,888030,3108105,10015005,30045015,84672315,225792840,573166440,1391975640.00000,3247943160.00000,7307872110.00000,15905368710.0000,33578000610.0000,68923264410.0000,137846528820.000,269128937220.000,513791607420.000,960566918220.000,1761039350070.00,3169870830126.00,5608233007146.00,9762479679106.00,16735679449896.0,28277527346376.0,47129212243960.0,77535155627160.0,125994627894135,202355008436035,321387366339585,505037289962205,785613562163430,1.21026954171123e+15,1.84725351103293e+15,2.79456300387033e+15;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,22,253,2024,12650,65780,296010,1184040,4292145,14307150,44352165,129024480,354817320,927983760,2319959400.00000,5567902560.00000,12875774670.0000,28781143380.0000,62359143990.0000,131282408400.000,269128937220.000,538257874440.000,1052049481860.00,2012616400080.00,3773655750150.00,6943526580276.00,12551759587422.0,22314239266528.0,39049918716424.0,67327446062800.0,114456658306760,191991813933920,317986441828055,520341450264090,841728816603675,1.34676610656588e+15,2.13237966872931e+15,3.34264921044054e+15,5.18990272147347e+15;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,23,276,2300,14950,80730,376740,1560780,5852925,20160075,64512240,193536720,548354040,1476337800.00000,3796297200.00000,9364199760.00000,22239974430.0000,51021117810.0000,113380261800.000,244662670200.000,513791607420.000,1052049481860.00,2104098963720.00,4116715363800.00,7890371113950.00,14833897694226.0,27385657281648.0,49699896548176.0,88749815264600.0,156077261327400,270533919634160,462525733568080,780512175396135,1.30085362566023e+15,2.14258244226390e+15,3.48934854882978e+15,5.62172821755909e+15,8.96437742799963e+15;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,24,300,2600,17550,98280,475020,2035800,7888725,28048800,92561040,286097760,834451800,2310789600.00000,6107086800.00000,15471286560.0000,37711260990.0000,88732378800.0000,202112640600.000,446775310800.000,960566918220.000,2012616400080.00,4116715363800.00,8233430727600.00,16123801841550.0,30957699535776.0,58343356817424.0,108043253365600,196793068630200,352870329957600,623404249591760,1.08592998315984e+15,1.86644215855598e+15,3.16729578421620e+15,5.30987822648010e+15,8.79922677530988e+15,1.44209549928690e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,25,325,2925,20475,118755,593775,2629575,10518300,38567100,131128140,417225900,1251677700.00000,3562467300.00000,9669554100.00000,25140840660.0000,62852101650.0000,151584480450.000,353697121050.000,800472431850.000,1761039350070.00,3773655750150.00,7890371113950.00,16123801841550.0,32247603683100.0,63205303218876.0,121548660036300,229591913401900,426384982032100,779255311989700,1.40265956158146e+15,2.48858954474130e+15,4.35503170329728e+15,7.52232748751348e+15,1.28322057139936e+16,2.16314324893035e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,26,351,3276,23751,142506,736281,3365856,13884156,52451256,183579396,600805296,1852482996.00000,5414950296.00000,15084504396.0000,40225345056.0000,103077446706.000,254661927156.000,608359048206.000,1408831480056.00,3169870830126.00,6943526580276.00,14833897694226.0,30957699535776.0,63205303218876.0,126410606437752,247959266474052,477551179875952,903936161908052,1.68319147389775e+15,3.08585103547921e+15,5.57444058022051e+15,9.92947228351779e+15,1.74517997710313e+16,3.02840054850248e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,27,378,3654,27405,169911,906192,4272048,18156204,70607460,254186856,854992152,2707475148.00000,8122425444.00000,23206929840.0000,63432274896.0000,166509721602.000,421171648758.000,1029530696964.00,2438362177020.00,5608233007146.00,12551759587422.0,27385657281648.0,58343356817424.0,121548660036300,247959266474052,495918532948104,973469712824056,1.87740587473211e+15,3.56059734862986e+15,6.64644838410907e+15,1.22208889643296e+16,2.21503612478474e+16,3.96021610188786e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,28,406,4060,31465,201376,1107568,5379616,23535820,94143280,348330136,1203322288.00000,3910797436.00000,12033222880.0000,35240152720.0000,98672427616.0000,265182149218.000,686353797976.000,1715884494940.00,4154246671960.00,9762479679106.00,22314239266528.0,49699896548176.0,108043253365600,229591913401900,477551179875952,973469712824056,1.94693942564811e+15,3.82434530038022e+15,7.38494264901008e+15,1.40313910331192e+16,2.62522799974487e+16,4.84026412452961e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,29,435,4495,35960,237336,1344904,6724520,30260340,124403620,472733756,1676056044.00000,5586853480.00000,17620076360.0000,52860229080.0000,151532656696.000,416714805914.000,1103068603890.00,2818953098830.00,6973199770790.00,16735679449896.0,39049918716424.0,88749815264600.0,196793068630200,426384982032100,903936161908052,1.87740587473211e+15,3.82434530038022e+15,7.64869060076044e+15,1.50336332497705e+16,2.90650242828897e+16,5.53173042803384e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,30,465,4960,40920,278256,1623160,8347680,38608020,163011640,635745396,2311801440.00000,7898654920.00000,25518731280.0000,78378960360.0000,229911617056.000,646626422970.000,1749695026860.00,4568648125690.00,11541847896480.0,28277527346376.0,67327446062800.0,156077261327400,352870329957600,779255311989700,1.68319147389775e+15,3.56059734862986e+15,7.38494264901008e+15,1.50336332497705e+16,3.00672664995410e+16,5.91322907824307e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,31,496,5456,46376,324632,1947792,10295472,48903492,211915132,847660528,3159461968.00000,11058116888.0000,36576848168.0000,114955808528.000,344867425584.000,991493848554.000,2741188875414.00,7309837001104.00,18851684897584.0,47129212243960.0,114456658306760,270533919634160,623404249591760,1.40265956158146e+15,3.08585103547921e+15,6.64644838410907e+15,1.40313910331192e+16,2.90650242828897e+16,5.91322907824307e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,32,528,5984,52360,376992,2324784,12620256,61523748,273438880,1121099408.00000,4280561376.00000,15338678264.0000,51915526432.0000,166871334960.000,511738760544.000,1503232609098.00,4244421484512.00,11554258485616.0,30405943383200.0,77535155627160.0,191991813933920,462525733568080,1.08592998315984e+15,2.48858954474130e+15,5.57444058022051e+15,1.22208889643296e+16,2.62522799974487e+16,5.53173042803384e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,33,561,6545,58905,435897,2760681,15380937,76904685,350343565,1471442973.00000,5752004349.00000,21090682613.0000,73006209045.0000,239877544005.000,751616304549.000,2254848913647.00,6499270398159.00,18053528883775.0,48459472266975.0,125994627894135,317986441828055,780512175396135,1.86644215855598e+15,4.35503170329728e+15,9.92947228351779e+15,2.21503612478474e+16,4.84026412452961e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,34,595,7140,66045,501942,3262623,18643560,95548245,445891810,1917334783.00000,7669339132.00000,28760021745.0000,101766230790.000,341643774795.000,1093260079344.00,3348108992991.00,9847379391150.00,27900908274925.0,76360380541900.0,202355008436035,520341450264090,1.30085362566023e+15,3.16729578421620e+15,7.52232748751348e+15,1.74517997710313e+16,3.96021610188786e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,35,630,7770,73815,575757,3838380,22481940,118030185,563921995,2481256778.00000,10150595910.0000,38910617655.0000,140676848445.000,482320623240.000,1575580702584.00,4923689695575.00,14771069086725.0,42671977361650.0,119032357903550,321387366339585,841728816603675,2.14258244226390e+15,5.30987822648010e+15,1.28322057139936e+16,3.02840054850248e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,36,666,8436,82251,658008,4496388,26978328,145008513,708930508,3190187286.00000,13340783196.0000,52251400851.0000,192928249296.000,675248872536.000,2250829575120.00,7174519270695.00,21945588357420.0,64617565719070.0,183649923622620,505037289962205,1.34676610656588e+15,3.48934854882978e+15,8.79922677530988e+15,2.16314324893035e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,37,703,9139,91390,749398,5245786,32224114,177232627,886163135,4076350421.00000,17417133617.0000,69668534468.0000,262596783764.000,937845656300.000,3188675231420.00,10363194502115.0,32308782859535.0,96926348578605.0,280576272201225,785613562163430,2.13237966872931e+15,5.62172821755909e+15,1.44209549928690e+16;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,38,741,9880,101270,850668,6096454,38320568,215553195,1101716330.00000,5178066751.00000,22595200368.0000,92263734836.0000,354860518600.000,1292706174900.00,4481381406320.00,14844575908435.0,47153358767970.0,144079707346575,424655979547800,1.21026954171123e+15,3.34264921044054e+15,8.96437742799963e+15;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,39,780,10660,111930,962598,7059052,45379620,260932815,1362649145.00000,6540715896.00000,29135916264.0000,121399651100.000,476260169700.000,1768966344600.00,6250347750920.00,21094923659355.0,68248282427325.0,212327989773900,636983969321700,1.84725351103293e+15,5.18990272147347e+15;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,40,820,11480,123410,1086008,8145060,53524680,314457495,1677106640.00000,8217822536.00000,37353738800.0000,158753389900.000,635013559600.000,2403979904200.00,8654327655120.00,29749251314475.0,97997533741800.0,310325523515700,947309492837400,2.79456300387033e+15;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,41,861,12341,135751,1221759,9366819,62891499,377348994,2054455634.00000,10272278170.0000,47626016970.0000,206379406870.000,841392966470.000,3245372870670.00,11899700525790.0,41648951840265.0,139646485582065,449972009097765,1.39728150193517e+15;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,42,903,13244,148995,1370754,10737573,73629072,450978066,2505433700.00000,12777711870.0000,60403728840.0000,266783135710.000,1108176102180.00,4353548972850.00,16253249498640.0,57902201338905.0,197548686920970,647520696018735;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,43,946,14190,163185,1533939,12271512,85900584,536878650,3042312350.00000,15820024220.0000,76223753060.0000,343006888770.000,1451182990950.00,5804731963800.00,22057981462440.0,79960182801345.0,277508869722315;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,44,990,15180,178365,1712304,13983816,99884400,636763050,3679075400.00000,19499099620.0000,95722852680.0000,438729741450.000,1889912732400.00,7694644696200.00,29752626158640.0,109712808959985;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,45,1035,16215,194580,1906884,15890700,115775100,752538150,4431613550.00000,23930713170.0000,119653565850.000,558383307300.000,2448296039700.00,10142940735900.0,39895566894540.0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,46,1081,17296,211876,2118760,18009460,133784560,886322710,5317936260.00000,29248649430.0000,148902215280.000,707285522580.000,3155581562280.00,13298522298180.0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,47,1128,18424,230300,2349060,20358520,154143080,1040465790.00000,6358402050.00000,35607051480.0000,184509266760.000,891794789340.000,4047376351620.00;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,48,1176,19600,249900,2598960,22957480,177100560,1217566350.00000,7575968400.00000,43183019880.0000,227692286640.000,1119487075980.00;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,49,1225,20825,270725,2869685,25827165,202927725,1420494075.00000,8996462475.00000,52179482355.0000,279871768995.000;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50,1275,22100,292825,3162510,28989675,231917400,1652411475.00000,10648873950.0000,62828356305.0000;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,51,1326,23426,316251,3478761,32468436,264385836,1916797311.00000,12565671261.0000;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,52,1378,24804,341055,3819816,36288252,300674088,2217471399.00000;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,53,1431,26235,367290,4187106,40475358,341149446;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,54,1485,27720,395010,4582116,45057474;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,55,1540,29260,424270,5006386;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,56,1596,30856,455126;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,57,1653,32509;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,58,1711;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,59;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1];
        b = b(1 : n, n);
        
    % Central logarithmic binomial coefficients
    else
        b = gammaln(2 : n - 1) + gammaln(n - 1 : -1 : 2);
        b = gammaln(n) - b';
    end
end

% Knot insertion algorithm
function x = bsplkin(x, k)

    % Y = BSPLKIN(X, K) Returns the control points 'Y' of the Bézier curve
    % that results of inserting 'K' knots to the control points 'X'.

    
    % Initialise variables
    n = size(x, 1);
    a = x(1, :);
    b = x(n, :);
    n = n - 1;
    
    % Iterative knot insertion
    for n = n : n + k - 1
        x = [a; (x(1 : n, :) .* (1 : n)' + x(2 : n + 1, :) .* ...
            (n : -1 : 1)') / (n + 1); b];
    end
end